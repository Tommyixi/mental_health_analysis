names(academic) = paste(names(academic), c("Past week: I felt anxious and agitated", "	Past week: I felt stressed due to academic reasons", "Past week: My academic stress prevented me from maintaining my self-care", "Academics is the main reason I am stressed in my life", "I feel pressured by parents' expectations to succeed", "I feel pressured by my own expectations to succeed", "My stress impacts me more physically than mentally", "Univ. adequately provides support with academic stress", "I utilize campus resources for anxiety/academic stress"))
maketable(dataframe = academic, maxnum = 7, options = c("Strongly Disagree", "Disagree", "Slightly Disagree", "Neither", "Slightly Agree", "Agree", "Strongly Agree", "NA"))
maketable(dataframe = academic, maxnum = 3, options = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of the time", "All of the time", "NA"))
@
\pagebreak
\subsection{Sleeping and eating habits}
Questions pertaining to the "sleeping and eating habits" aspect of the survey. As noted on the survey, ''The [sleeping and eating section] will cover sleeping and eating habits.  We would like to learn more about the quality and amount of sleep undergraduate students receive, as well as the extent to which they have access to and eat healthy food because
sleep and diet are both essential elements of wellness."
<<echo = FALSE, results = 'asis'>>=
sleepeat = MH[,grep("^c", names(MH))]
colnames(sleepeat) = paste(names(sleepeat),c("Hours of sleep per day", "Sleep obstacles: Academics", "Sleep obstacles: Anxiety", "Sleep obstacles: Concerns about post-graduation", "Sleep obstacles: Finances", "Sleep obstacles: Living conditions", "Sleep obstacles: Social concerns", "Sleep obstacles: Something else (please specify)", "Sleep obstacles: Nothing - I am not being prevented from more sleep", "I am satisfied with the amount of sleep I usually receive", "The quality of my sleep is good", "The amount of sleep I receive makes me feel irritable", "The amount I sleep negatively affects my mental health", "I prioritize my academic performance above sleep", "I have a problem with daytime sleepiness", "I would benefit from naps during the day", "I eat health food that is good for my body", "I have easy access to places that sell healthy food", "I have easy access to affordable healthy food"))
maketable(dataframe = sleepeat, maxnum = 1, options = c("No ", "Yes ", "NA "))
maketable(dataframe = sleepeat, maxnum = 7, options = c("Strongly Disagree", "Disagree", "Slightly Disagree", "Neither", "Slightly Agree", "Agree", "Strongly Agree", "NA"))
maketable(dataframe = sleepeat, maxnum = 6, options = c("0-2", "3-4", "5-6", "7-8", "8-10", "10+", "NA"))
@
\pagebreak
\subsection{Mental Well-being}
Questions pertaining to the ``Mental Well-being" aspect of the survey. As noted on the survey, ``The [mental well-being section] of the survey will assess undergraduate studentsâ€™ happiness and how they feel about life.  Some of the following questions are related to
feelings of depression, and responses will be used to learn more about the
wellness of the undergraduate population and shape what the campus can do to
address it."
<<echo = FALSE, results = 'asis'>>=
mental = MH[,grep("^d", names(MH))]
names(mental) = paste(names(mental), c("Past week: I felt depressed", "Past week: I felt hopeful about the future", "Past week: I felt happy with my life", "Past week: I felt alone and isolated", "Past week: I felt like it was hard to \``get up \" from lack of energy & motivation", "	Past week: I felt less interested in things I usually enjoy", "	Past week: I felt upset about the way my life was heading", "Past week: I felt like utilizing campus resources for mental distress", "Past week: I felt like a bad person", "Past week: I found it hard to focus on the positive aspects of life", "	In the past month I felt like utilizing campus resources for mental distress", "	Ever diagnosed with depression by a clinical professional"))
maketable(dataframe = mental, maxnum = 3, options = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of the time", "All of the time", "NA"))
maketable(dataframe = mental, maxnum = 1, options = c("No", "Yes", "NA")) #THIS ISNT WORKING
@
\pagebreak
\subsection{Sexual Violence}
Questions pertaining to the ``Sexual Violence" aspect of the survey. As noted on the survey, ``The ASUC is committed to helping create a campus where sexual violence is not
tolerated, where survivors are supported, and perpetrators are held accountable.
The purpose of the [sexual violence section] is to identify the strengths and needs of our campus sexual violence prevention and response services. Feel free to answer all, some,
or none of the questions."
<<echo = FALSE, results= 'asis'>>=
sexvio = MH[,grep("^e[0-9]", names(MH))]
sexvio$e12 = NULL
names(sexvio) = paste(names(sexvio),c("Option to answer sexual violence prevention section", "UG Student Well-Being Survey", "Tang medical services", "Tang social services", "Confidential CARE advocates", "Title IX office/OPHD", "EOP counselors", "Resident Assistant/Resident Director", "Sexual Assault Commission/Cal Consent Campaign", "UCPD" , "Other", "Why haven't used services for information or support about sexual violence", "Sexual assault and harassment", "Mental health", "Maintaining a balanced lifestyle", "Alcohol use"))
maketable(dataframe = sexvio, maxnum = 1, options = c("No", "Yes", "NA")) #Doesn't work
maketable(dataframe = sexvio, maxnum = 10, options = c("1 = Not at all", " ", " ", " "," ", " "," ", " ", " ", "10 = Completely comfortable/effective", "NA"))
maketable(dataframe = sexvio, maxnum = 4, options = c("Yes, for information only", "Yes, for support only", "Yes, for both information and support", "No, have not accessed", "NA"))
maketable(dataframe = sexvio, maxnum = 3, options = c("I did not have a need", "I did not know about these resources", "I did not feel comfortable accessing these services", "No, have not accessed")) #Not working
@
\pagebreak
\subsection{Campus Resources}
Questions pertaining to the "Campus Resources" aspect of the survey. As noted on the survey, "The [campus resources section] of the survey will address to what extent you, as an
undergraduate student, are aware of and utilize resources the University of
California, Berkeley offers to improve student wellness.  Responses will be used
to see what services are most effective and can be improved.  The following
questions are about your knowledge and awareness of different campus-related
mental health resources."
<<echo = FALSE, results = 'asis'>>=
cresources = MH[,grep("^f", names(MH))]
names(cresources) = paste(names(cresources),c("UHS at the Tang Center: Counseling & Psychological Services",
"Tang Center CPS Satellite Counseling Services on campus",
"Nap spaces on campus",
"Peer Health Workers for IFC, PHC, Housing, Co-Op residents",
"Student-to-Student Peer Counseling",
"Tang Center Health Coaching",
"Confidential Care Advocates",
"How hear about: CPS - A friend",
"How hear about: CPS - Professor/GSI",
"How hear about: CPS - Peer Support Organization",
"How hear about: CPS - Flier",
"How hear about: CPS - Email/Online Website",
"How hear about: CPS - Other",
"How hear about: CPS - Don't know/Don't remember",
"How hear about: CPS campus Satellite Counseling Services - A friend",
"How hear about: CPS campus Satellite Counseling Services - Professor/GSI",
"How hear about: CPS campus Satellite Counseling Services - Peer Support Organization",
"How hear about: CPS campus Satellite Counseling Services - Flier",
"How hear about: CPS campus Satellite Counseling Services - Email/Online Website",
"How hear about: CPS campus Satellite Counseling Services - Other",
"How hear about: CPS campus Satellite Counseling Services - Don't know/Don't remember",
"How hear about: Nap spaces on campus - A friend",
"How hear about: Nap spaces on campus - Professor/GSI",
"How hear about: Nap spaces on campus - Peer Support Organization",
"How hear about: Nap spaces on campus - Flier",
"How hear about: Nap spaces on campus - Email/Online Website",
"How hear about: Nap spaces on campus - Other",
"How hear about: Nap spaces on campus - Don't know/Don't remember",
"How hear about: Peer Health Workers - A friend",
"How hear about: Peer Health Workers - Professor/GSI",
"How hear about: Peer Health Workers - Peer Support Organization",
"How hear about: Peer Health Workers - Flier",
"How hear about: Peer Health Workers - Email/Online Website",
"How hear about: Peer Health Workers - Other",
"How hear about: Peer Health Workers - Don't know/Don't remember",
"How hear about: Student-to-Student Peer Counseling - A friend",
"How hear about: Student-to-Student Peer Counseling - Professor/GSI",
"How hear about: Student-to-Student Peer Counseling - Peer Support Organization",
"How hear about: Student-to-Student Peer Counseling - Flier",
"How hear about: Student-to-Student Peer Counseling - Email/Online Website",
"How hear about: Student-to-Student Peer Counseling - Other",
"How hear about: Student-to-Student Peer Counseling - Don't know/Don't remember",
"How hear about: Tang Center Health Coaching - A friend",
"How hear about: Tang Center Health Coaching - Professor/GSI",
"How hear about: Tang Center Health Coaching - Peer Support Organization",
"How hear about: Tang Center Health Coaching - Flier",
"How hear about: Tang Center Health Coaching - Email/Online Website",
"How hear about: Tang Center Health Coaching - Other",
"How hear about: Tang Center Health Coaching - Don't know/Don't remember",
"How hear about: Confidential Care Advocates - A friend",
"How hear about: Confidential Care Advocates - Professor/GSI",
"How hear about: Confidential Care Advocates - Peer Support Organization",
"How hear about: Confidential Care Advocates - Flier",
"How hear about: Confidential Care Advocates - Email/Online Website",
"How hear about: Confidential Care Advocates - Other",
"How hear about: Confidential Care Advocates - Don't know/Don't remember",
"Rate services: Counseling and Psychological Services",
"Rate services: Tang Center CPS Satellite Counseling Services on campus",
"Rate services: Nap spaces on campus",
"Rate services: Peer Health Workers",
"Rate services: Student-to-Student Peer Counseling",
"Rate services: Tang Center Health Coaching",
"Rate services: Confidential Care Advocates",
"Resource expansion: Counseling and Psychological Services",
"Resource expansion: CPS Satellite Counseling Services on campus",
"Resource expansion: Nap spaces on campus",
"Resource expansion: Peer Health Workers",
"Resource expansion: Student-to-Student Peer Counseling",
"Resource expansion: Tang Center Health Coaching",
"Resource expansion: Confidential Care Advocates",
"Wait for mental health aid impedes on students use of these resources",
"Talk with GSI/professor about mental health and resources",
"Was information accurate, relevant and beneficial",
"GSIs and professors should be better trained to help with mental health issues",
"How likely would you be to approach the Tang Center or other campus resources"))
maketable(dataframe = cresources, maxnum = 3, options = c("I have not heard about until now", "I have heard about but have not used", "I have used this service", "NA"))
maketable(dataframe = cresources, maxnum = 1, options = c("No", "Yes", "NA"), scalebox = .85)
maketable(dataframe = cresources, maxnum = 5, options = c("Very poor/Strongly disagree", "Poor/Slightly disagree", "Average/Neutral", "Good/Slightly agree", "Very Good/Strongly agree", "NA"), scalebox = .9)
@
\pagebreak
\section{Inference}
The following tables denote, for each of the above sections, whether or not there is an association between ethnicity, gender, sexual orientation, or living status versus all of the questions in the previous sections. $\chi^2$ tests were done to assess significance of associations at the $\alpha = 0.05$ level. For example, in the table immediately below, there is an asterisk at ``I am confident about my financial situation" and "Ethnicity." This means there is a significant association between satisfaction of living conditions and ethnicity. All p-values were adjusted for multiple comparisons using the bonferroni correction.
<<results = 'asis', warning = FALSE, echo = FALSE>>=
compare_vars = MH[,c("ethn_shtdesc", "g01", "g02", "g03")]
chi_table = function(dataframe, scalebox = 1, caption){
chi_dataframe = t(sapply(dataframe, function(x) sapply(compare_vars, function(y) c(ifelse(chisq.test(y, x)$p.value*dim(dataframe)[2] < 0.0005, "<0.0005", ifelse(chisq.test(y, x)$p.value*dim(dataframe)[2] > 1, 1, round(chisq.test(y, x)$p.value*dim(dataframe)[2], 4))), ifelse(chisq.test(y, x)$p.value*dim(dataframe)[2] < 0.05, "*", " ")))))
colnames(chi_dataframe) = c("Ethn.", " ", "Gender", " ", "S. Orient", " ", "Living", " ")
return(print(xtable(chi_dataframe, caption = caption), scalebox=scalebox))
}
@
<<results = 'asis', warning = FALSE, echo = F>>=
chi_table(genliving, caption = "Table of p-values and significance for General Living section")
@
<<results = 'asis', warning = FALSE, echo = F>>=
chi_table(academic, scalebox = .85, caption = "Table of p-values and significance for Academic life section")
@
<<results = 'asis', warning = FALSE, echo = F>>=
chi_table(sleepeat, scalebox = .85, caption = "Table of p-values and significance for Sleeping and eating habits section")
@
<<results = 'asis', warning = FALSE, echo = F>>=
chi_table(mental, 0.85, caption = "Table of p-values and significance for Mental well-being section")
@
<<results = 'asis', warning = FALSE, echo= F>>=
chi_table(sexvio, 0.85, caption = "Table of p-values and significance for Sexual violence section")
@
<<results = 'asis', warning = FALSE, echo = F>>=
chi_table(cresources, scalebox = 0.75, caption = "Table of p-values and significance for Campus Resources section")
@
\pagebreak
\section{Additional Inference}
This section displays two heatmaps to identify possible trends in the data.
<<results = 'asis', warning = FALSE, echo = F, fig.align=TRUE>>=
right_side_ethn <- c(paste(unique(MH$ethn_shtdesc)))
right_side_gender <-c(paste(unique(MH$gender)))
right_side_mhealth <- head(c(paste(unique(MH$a06))), -1)
right_side_sexuality <- head(sort(c(paste(unique(MH$g02)))),-1)
right_side_total <- c(right_side_ethn, right_side_gender, right_side_mhealth, right_side_sexuality)
bottom_side_a1 <- grep("^a0([1-4]|[7-9])",colnames(MH))
bottom_side_a2 <- grep("(^a0([5-6])|^a1([0-2]))",colnames(MH))
bottom_side_b1 <- grep("^b0([4-9])",colnames(MH))
bottom_side_b2 <- grep("^b0([1-3])",colnames(MH))
bottom_side_c1 <- grep("^c02([a-h])",colnames(MH))
bottom_side_c2 <- grep("(^c0([3-9])|^c1([0-2]))",colnames(MH))
bottom_side_d1 <- grep("(^d0([1-9])|^d1([0]))",colnames(MH))
bottom_side_e1 <- grep("(^e0([2])|^e1([4-7]))",colnames(MH))
bottom_side_e2 <- grep("(^e0([3-9])|^e1([1])|^e13)",colnames(MH))
bottom_side_f1 <- grep("^f0([1-7])",colnames(MH))
bottom_side_total_1 <- grep("^a0([1-4]|[7-9])",colnames(MH))
bottom_side_total_2 <- grep("^a0([5-6])|^a1([0-2])",colnames(MH))
generate_ethn_matrix = function(col_cat){
map_table <- matrix(ncol=length(col_cat), nrow=length(right_side_ethn))
rownames(map_table) <-right_side_ethn
colnames(map_table) <- sapply(col_cat,function(name) colnames(MH)[name] )
return(map_table)
}
create_heatmap_ethn = function(created_matrix){
for(row in 1:nrow(created_matrix)) {
for(col in 1:ncol(created_matrix)) {
created_matrix[row,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$ethn_shtdesc==rownames(created_matrix)[row]], na.rm=TRUE), digits =2)
}
}
heatmap.2(created_matrix, cellnote = created_matrix, density.info="none",trace="none", notecol="black", dendrogram="none")
}
generate_gender_matrix = function(col_cat){
map_table <- matrix(ncol=length(col_cat), nrow=length(right_side_gender))
rownames(map_table) <-right_side_gender
colnames(map_table) <- sapply(col_cat,function(name) colnames(MH)[name] )
return(map_table)
}
create_heatmap_gender = function(created_matrix){
for(row in 1:nrow(created_matrix)) {
for(col in 1:ncol(created_matrix)) {
created_matrix[row,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$gender==rownames(created_matrix)[row]], na.rm=TRUE), digits=2)
}
}
heatmap.2(created_matrix, cellnote = created_matrix, density.info="none",trace="none", notecol="black", dendrogram="none")
#print(heatmap(created_matrix, Rowv=NA, Colv=NA, scale = "none", col = cm.colors(256), margins=c(6,6)))
}
generate_mhealth_matrix = function(col_cat){
map_table <- matrix(ncol=length(col_cat), nrow=length(right_side_mhealth))
rownames(map_table) <-right_side_mhealth
colnames(map_table) <- sapply(col_cat,function(name) colnames(MH)[name] )
return(map_table)
}
create_heatmap_mhealth = function(created_matrix){
for(row in 1:nrow(created_matrix)) {
for(col in 1:ncol(created_matrix)) {
created_matrix[row,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$a06==rownames(created_matrix)[row]], na.rm=TRUE), digits = 2)
}
}
rownames(created_matrix) <- c("Slightly Agree MH Rating", "Disagree MH Rating", "Neither Agree nor Disagree MH Rating", "Slightly Disagree MH Rating", "Strongly Disagree MH Rating")
heatmap.2(created_matrix, cellnote = created_matrix, density.info="none",trace="none", notecol="black", dendrogram="none")
}
generate_sexuality_matrix = function(col_cat){
map_table <- matrix(ncol=length(col_cat), nrow=length(right_side_sexuality))
rownames(map_table) <-right_side_sexuality
colnames(map_table) <- sapply(col_cat,function(name) colnames(MH)[name] )
return(map_table)
}
create_heatmap_sexuality = function(created_matrix){
for(row in 1:nrow(created_matrix)) {
for(col in 1:ncol(created_matrix)) {
created_matrix[row,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$g02==rownames(created_matrix)[row]], na.rm=TRUE), digits = 2)
}
}
rownames(created_matrix) <- c("Heterosexual", "Gay or lesbian", "Bisexual/Pansexual", "Other")
heatmap.2(created_matrix, cellnote = created_matrix, density.info="none",trace="none", notecol="black", dendrogram="none")
}
generate_total_matrix = function(col_cat){
map_table <- matrix(ncol=length(col_cat), nrow=length(right_side_total))
rownames(map_table) <-right_side_total
colnames(map_table) <- sapply(col_cat,function(name) colnames(MH)[name] )
return(map_table)
}
create_heatmap_total = function(created_matrix){
counter <- 1
for(row in 1:nrow(created_matrix)) {
if(counter <= length(right_side_ethn)){
for(col in 1:ncol(created_matrix)) {
created_matrix[row,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$ethn_shtdesc==rownames(created_matrix)[row]], na.rm=TRUE), digits =2)
}
counter <- counter + 1
}
if((counter <= (length(right_side_ethn) + length(right_side_gender)) && counter > length(right_side_ethn)) ){
for(col in 1:ncol(created_matrix)) {
created_matrix[counter,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$gender==rownames(created_matrix)[counter]], na.rm=TRUE), digits=2)
}
counter <- counter + 1
}
if((counter <= (length(right_side_ethn) + length(right_side_gender) + length(right_side_mhealth)) && counter > length(right_side_ethn) + length(right_side_gender)) ){
for(col in 1:ncol(created_matrix)) {
created_matrix[counter,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$a06==rownames(created_matrix)[counter]], na.rm=TRUE), digits = 2)
}
counter <- counter + 1
}
if((counter <= (length(right_side_ethn) + length(right_side_gender) + length(right_side_mhealth) + length(right_side_sexuality)) && counter > length(right_side_ethn) + length(right_side_gender) + length(right_side_mhealth)) ){
for(col in 1:ncol(created_matrix)) {
created_matrix[counter,col] = round(mean(get(colnames(created_matrix)[col],MH)[MH$g02==rownames(created_matrix)[counter]], na.rm=TRUE), digits = 2)
}
counter <- counter + 1
}
}
rownames(created_matrix) <- c("White", "Other Hispanic/Latino","African American/Black", "Native American/Alaska Native","Mexican American/Chicano", "Korean", "Filipino", "South Asian", "Japanese", "International", "Decline to State", "Pacific Islander", "Chinese", "Vietnamese", "Other Asian", "Male", "Female", "Slightly Agree MH Rating", "Disagree MH Rating", "Neither Agree nor Disagree MH Rating", "Slightly Disagree MH Rating", "Strongly Disagree MH Rating", "Heterosexual", "Gay or lesbian", "Bisexual/Pansexual", "Other")
heatmap.2(as.matrix(created_matrix), cellnote = created_matrix, density.info="none",trace="none", notecol="black", dendrogram="none", Colv=FALSE, Rowv= FALSE, margins = c(12,18) )
}
create_heatmap_total(generate_total_matrix(bottom_side_total_1))
create_heatmap_total(generate_total_matrix(bottom_side_total_2))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_a1))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_a2))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_b1))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_b2))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_c1))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_c2))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_d1))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_e1))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_e2))
#create_heatmap_ethn(generate_ethn_matrix(bottom_side_f1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_a1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_a2))
#create_heatmap_gender(generate_gender_matrix(bottom_side_b1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_b2))
#create_heatmap_gender(generate_gender_matrix(bottom_side_c1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_c2))
#create_heatmap_gender(generate_gender_matrix(bottom_side_d1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_e1))
#create_heatmap_gender(generate_gender_matrix(bottom_side_e2))
#create_heatmap_gender(generate_gender_matrix(bottom_side_f1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_a1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_a2))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_b1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_b2))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_c1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_c2))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_d1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_e1))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_e2))
#create_heatmap_mhealth(generate_mhealth_matrix(bottom_side_f1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_a1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_a2))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_b1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_b2))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_c1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_c2))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_d1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_e1))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_e2))
#create_heatmap_sexuality(generate_sexuality_matrix(bottom_side_f1))
@
Of people who are mentally distress, how many people are utilizing services - D08, B01, B03 (get percentages for each category) (F01 through F07)
<<echo = FALSE, results = 'asis'>>=
sub_cresources = cresources[,1:7]
sub_mental = mental[,1:10]
table_strata = function(x, y) {
tab = prop.table(table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y])))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
return(print(xtable(tab, digits = 3), rotate.colnames = TRUE, scalebox = .7, table.placement="H") )
}
lapply(1:7, function(y) lapply(1:10, table_strata, y))
@
\end{document}
lapply(1:7, function(y) lapply(1:10, table_strata, y))
x = 1
y = 2
tab = prop.table(table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y])))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
tab
tab
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
tab
latex(mytable)
?latex
install.packages("tables")
library(tables)
?table
set.seed(10)
d <- data.frame(x=sample(1:4),y=sample(1:4))
d
tb <- with(d, table(d,dnn=c("Xs","Ys")))
d
tb
ncol(tab)
dnn(tab)
dimnames(tab)
dimnames(tab)[,1]
dimnames(tab)[1]
dimnames(tab)[[1]]
dimnames(tab)[1]
dimnames(tab)[1][1]
names(dimnames(tab)[1])
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]))
rep("\", ncol(tab)
rep(ncol(tab), "\")
?rep
rep("\", 4)
rep("\", 4)
rep("/\", 4)
rep("\\", 4)
rep("n\", 4)
rep("\/", 4)
rep("\", 4)
rep("\\", 4)
rep("\ \", 4)
rep("\\", 4)
rep("//", 4)
rep("\\", 4)
cat("//")
rep(paste("/"), 4)
names(dimnames(tab)[2])
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", rep(paste("/"), ncol(tab))), paste0(names(dimnames(tab)[2]))
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", rep(paste("/"), ncol(tab))), paste0(names(dimnames(tab)[2])
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", rep(paste("/"), ncol(tab))), paste0(names(dimnames(tab)[2]))
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", rep(paste("/"), ncol(tab))), paste0(names(dimnames(tab)[2])))
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", rep(paste("/"), ncol(tab)))
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} ", paste0(rep(paste("/"), ncol(tab))))
paste0(rep(paste("/"), ncol(tab)))
rep(paste("/"), ncol(tab))
rep(paste("/"), ncol(tab)))
rep(paste("/"), ncol(tab)))
rep(paste("/"), ncol(tab))
paste0(rep(paste("/"), ncol(tab)))
paste0(paste0(rep(paste("/"), ncol(tab))))
rep(paste("/"), ncol(tab))
?paste
paste0("a", "b")
rep("\", 4)
rep("\\",4)
rep("\",4)
rep(paste0("\"),4)
rep(paste0("/\"),4)
rep(paste0("//\"),4)
rep(paste0("\\"),4)
rep("\\",4)
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n")
names(dimnames(tab)[2])
rownames(tab)
paste(rownames(tab), "&")
paste0(paste(rownames(tab), "&"))
c(paste(rownames(tab), "&")
c(paste(rownames(tab), "&"))
paste0(paste(rownames(tab), "&"), collapse = ",")
paste0(paste(rownames(tab), "&"), collapse = " ")
paste0(paste("&", rownames(tab)), collapse = " ")
paste0(paste("&", rownames(tab)), collapse = " ")
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"),
paste0(paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n")
)
paste0(names(dimnames(tab)[2]), paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n")
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"),
paste0(names(dimnames(tab)[2]), paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n")
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"),
paste0(names(dimnames(tab)[2]), paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n")
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n")
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"),
paste0(names(dimnames(tab)[2]), paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n")
)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", rownames(tab)), collapse = " "), "\\\\n"))
return(print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE) )
names(dimnames(tab)[2])
rownames(tab)
colnames(tab)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\n"))
print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\n"))
print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE)
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\n")
paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\n")
c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\n"))
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\ \n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\ \n"))
print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\ \n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\ \n"))
print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\ \n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\ \n"))
print(xtable(tab, digits = 3), add.to.row = addtorow, include.colnames = FALSE)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
addtorow = list()
addtorow$pos = list(0,0)
addtorow$command = c(paste0("& \\multicolumn{", ncol(tab), "}{c}{", names(dimnames(tab)[1]), "} \\\\ \n"), paste0(names(dimnames(tab)[2]), paste0(paste("&", colnames(tab)), collapse = " "), "\\\\ \n"))
dimnames(tab)
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
tab
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
tab
sub_cresources = cresources[,1:7]
sub_mental = mental[,1:10]
tab = table(sub_mental[,x], sub_cresources[,y],
dnn = list(colnames(sub_mental)[x], colnames(sub_cresources)[y]))
colnames(tab) = c("I have not heard about until now", "I have heard about but have not used", "I have used this service")
rownames(tab) = c("Rarely or none of the time", "Some or a little of the time", "Occasionally or a moderate amount of time", "Most or all of the time")
tab
print(xtable(tab, digits = 3), rotate.colnames = TRUE)
print(xtable(tab, digits = 3), rotate.colnames = TRUE, scalebox = .7)
